<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.1.xsd">

	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/user/**"
			access="hasRole('ROLE_USER') or hasRole('ROLE_ADMIN') or hasRole('ROLE_AGA')"
			requires-channel="https" />
		<intercept-url pattern="/admin/**"
			access="hasRole('ROLE_ADMIN') or hasRole('ROLE_AGA')"
			requires-channel="https" />
		<intercept-url pattern="/**" requires-channel="https" />
		
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
		<form-login login-page="/login" default-target-url="/user"
			authentication-failure-url="/login?error" username-parameter="tc"
			password-parameter="name" />
		<logout logout-url="/logout" logout-success-url="/login?logout" />
		<!-- enable csrf protection -->
		<csrf />
	</http>

	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select tc,name, enabled from user where tc=?"
				authorities-by-username-query="select tc, role from role where tc=?  " />
		</authentication-provider>
	</authentication-manager>

</beans:beans>